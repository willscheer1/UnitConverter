"""
"""
import math

unit_library = {
    # stores all unit symbols
    "Area": {
        "Square kilometer": "km\u00B2",
        "Square meter": "m\u00B2",
        "Square mile": "mi\u00B2",
        "Square yard": "yd\u00B2",
        "Square foot": "ft\u00B2",
        "Square inch": "in\u00B2",
        "Hectare": "ha",
        "Acre": "ac"
    },
    "Data Transfer Rate": {
        "Bit per second": "b/s",
        "Kilobit per second": "Kb/s",
        "Kilobyte per second": "KB/s",
        "Kibibit per second": "Kib/s",
        "Megabit per second": "Mb/s",
        "Megabyte per second": "MB/s",
        "Mebibit per second": "Mib/s",
        "Gigabit per second": "Gb/s",
        "Gigabyte per second": "GB/s",
        "Gibibit per second": "Gib/s",
        "Terabit per second": "Tb/s",
        "Terabyte per second": "TB/s",
        "Tebibit per second": "Tib/s"
    },
    "Digital Storage": {
        "Bit": "b",
        "Kilobit": "Kb",
        "Kibibit": "Kib",
        "Megabit": "Mb",
        "Mebibit": "Mib",
        "Gigabit": "Gb",
        "Gibibit": "Gib",
        "Terabit": "Tb",
        "Tebibit": "Tib",
        "Petabit": "Pb",
        "Pebibit": "Pib",
        "Byte": "B",
        "Kilobyte": "KB",
        "Kibibyte": "KiB",
        "Megabyte": "MB",
        "Mebibyte": "MiB",
        "Gigabyte": "GB",
        "Gibibyte": "GiB",
        "Terabyte": "TB",
        "Tebibyte": "TiB",
        "Petabyte": "PB",
        "Pebibyte": "PiB"
    },
    "Energy": {
        "Joule": "J",
        "Kilojoule": "kJ",
        "Gram calorie": "cal",
        "Kilocalorie": "kcal",
        "Watt hour": "Wh",
        "Kilowatt hour": "kWh",
        "Electronvolt": "eV",
        "British thermal unit": "Btu",
        "US therm": "therm",
        "Foot-pound": "ft\u00B7lbs"
    },
    "Frequency": {
        "Hertz": "Hz",
        "Kilohertz": "kHz",
        "Megahertz": "MHz",
        "Gigahertz": "GHz"
    },
    "Fuel Economy": {
        "Miles per gallon": "mpg",
        "Miles per gallon (Imperial)": "mpg(I)",
        "Kilometer per liter": "km/L",
        "Liter per 100 kilometers": "L/100km"
    },
    "Length": {
        "Kilometer": "km",
        "Meter": "m",
        "Centimeter": "cm",
        "Millimeter": "mm",
        "Micrometer": "\u03BCm",
        "Nanometer": "nm",
        "Mile": "mi",
        "Yard": "yd",
        "Foot": "ft",
        "Inch": "in",
        "Nautical Mile": "M"
    },
    "Mass": {
        "Metric ton": "t",
        "Kilogram": "kg",
        "Gram": "g",
        "Milligram": "mg",
        "Microgram": "\u03BCg",
        "Imperial ton": "long ton",
        "US ton": "short ton",
        "Stone": "st",
        "Pound": "lb",
        "Ounce": "oz"
    },
    "Plane Angle": {
        "Arcsecond": "arcsec",
        "Degree": "deg",
        "Gradian": "gon",
        "Milliradian": "mrad",
        "Minute of Arc": "arcmin",
        "Radian": "rad"
    },
    "Pressure": {
        "Bar": "bar",
        "Pascal": "Pa",
        "Pound-force per square inch": "psi",
        "Standard atmosphere": "atm",
        "Torr": "Torr"
    },
    "Speed": {
        "Miles per hour": "mph",
        "Foot per second": "ft/s",
        "Meter per second": "m/s",
        "Kilometer per hour": "km/h",
        "Knot": "kn"
    },
    "Temperature": {
        "Degree Celsius": "\u00B0C",
        "Fahrenheit": "\u00B0F",
        "Kelvin": "K"
    },
    "Time": {
        "Nanosecond": "ns",
        "Microsecond": "\u03BCs",
        "Millisecond": "ms",
        "Second": "s",
        "Minute": "min",
        "Hour": "h",
        "Day": "day(s)",
        "Week": "week(s)",
        "Month": "month(s)",
        "Calender year": "year(s)",
        "Decade": "dec",
        "Century": "c"
    },
    "Volume": {
        "US liquid gallon": "US gal",
        "US liquid quart": "US qt",
        "US liquid pint": "US pt",
        "US legal cup": "US cup",
        "US fluid ounce": "US fl oz",
        "US tablespoon": "US tbsp",
        "US teaspoon": "US tsp",
        "Cubic meter": "m\u00B3",
        "Liter": "L",
        "Milliliter": "mL",
        "Imperial gallon": "imp gal",
        "Imperial quart": "imp qt",
        "Imperial pint": "imp pt",
        "Imperial cup": "imp cup",
        "Imperial fluid ounce": "imp fl oz",
        "Imperial tablespoon": "imp tbsp",
        "Imperial teaspoon": "imp tsp",
        "Cubic foot": "ft\u00B3",
        "Cubic inch": "in\u00B3"
    }
}

conversion_library = {
    # stores all conversion functions

    # AREA
    "Square kilometer": {
        "Square kilometer": lambda value: value,
        "Square meter": lambda value: value * 1e6,
        "Square mile": lambda value: value / 2.59,
        "Square yard": lambda value: value * 1.196e6,
        "Square foot": lambda value: value * 1.076e7,
        "Square inch": lambda value: value * 1.55e9,
        "Hectare": lambda value: value * 100,
        "Acre": lambda value: value * 247.1
    },
    "Square meter": {
        "Square kilometer": lambda value: value / 1e6,
        "Square meter": lambda value: value,
        "Square mile": lambda value: value / 2.59e6,
        "Square yard": lambda value: value * 1.196,
        "Square foot": lambda value: value * 10.764,
        "Square inch": lambda value: value * 1550,
        "Hectare": lambda value: value / 10000,
        "Acre": lambda value: value / 4047
    },
    "Square mile": {
        "Square kilometer": lambda value: value * 2.59,
        "Square meter": lambda value: value * 2.59e6,
        "Square mile": lambda value: value,
        "Square yard": lambda value: value * 3.098e6,
        "Square foot": lambda value: value * 2.788e7,
        "Square inch": lambda value: value * 4.014e9,
        "Hectare": lambda value: value * 259,
        "Acre": lambda value: value * 640
    },
    "Square yard": {
        "Square kilometer": lambda value: value / 1.196e6,
        "Square meter": lambda value: value / 1.196,
        "Square mile": lambda value: value / 3.098e6,
        "Square yard": lambda value: value,
        "Square foot": lambda value: value * 9,
        "Square inch": lambda value: value * 1296,
        "Hectare": lambda value: value / 11960,
        "Acre": lambda value: value / 4840
    },
    "Square foot": {
        "Square kilometer": lambda value: value / 1.076e7,
        "Square meter": lambda value: value / 10.764,
        "Square mile": lambda value: value / 2.788e7,
        "Square yard": lambda value: value / 9,
        "Square foot": lambda value: value,
        "Square inch": lambda value: value * 144,
        "Hectare": lambda value: value / 107600,
        "Acre": lambda value: value / 43560
    },
    "Square inch": {
        "Square kilometer": lambda value: value / 1.55e9,
        "Square meter": lambda value: value / 1550,
        "Square mile": lambda value: value / 4.014e9,
        "Square yard": lambda value: value / 1296,
        "Square foot": lambda value: value / 144,
        "Square inch": lambda value: value,
        "Hectare": lambda value: value / 1.55e7,
        "Acre": lambda value: value / 6.273e6
    },
    "Hectare": {
        "Square kilometer": lambda value: value / 100,
        "Square meter": lambda value: value * 10000,
        "Square mile": lambda value: value / 259,
        "Square yard": lambda value: value * 11960,
        "Square foot": lambda value: value * 107600,
        "Square inch": lambda value: value * 1.55e7,
        "Hectare": lambda value: value,
        "Acre": lambda value: value * 2.471
    },
    "Acre": {
        "Square kilometer": lambda value: value / 247.1,
        "Square meter": lambda value: value * 4047,
        "Square mile": lambda value: value / 640,
        "Square yard": lambda value: value * 4840,
        "Square foot": lambda value: value * 43560,
        "Square inch": lambda value: value * 6.273e6,
        "Hectare": lambda value: value / 2.471,
        "Acre": lambda value: value
    },
    # DATA TRANSFER RATE
    "Bit per second": {
        "Bit per second": lambda value: value,
        "Kilobit per second": lambda value: value / 1000,
        "Kilobyte per second": lambda value: value / 8000,
        "Kibibit per second": lambda value: value / 1024, 
        "Megabit per second": lambda value: value / 1e6, 
        "Megabyte per second": lambda value: value / 8e6, 
        "Mebibit per second": lambda value: value / 1.049e6, 
        "Gigabit per second": lambda value: value / 1e9, 
        "Gigabyte per second": lambda value: value / 8e9, 
        "Gibibit per second": lambda value: value / 1.074e9, 
        "Terabit per second": lambda value: value / 1e12, 
        "Terabyte per second": lambda value: value / 8e12, 
        "Tebibit per second": lambda value: value / 1.1e12
    },
    "Kilobit per second": {
        "Bit per second": lambda value: value * 1000,
        "Kilobit per second": lambda value: value,
        "Kilobyte per second": lambda value: value / 8,
        "Kibibit per second": lambda value: value / 1.024, 
        "Megabit per second": lambda value: value / 1000, 
        "Megabyte per second": lambda value: value / 8000, 
        "Mebibit per second": lambda value: value / 1049, 
        "Gigabit per second": lambda value: value / 1e6, 
        "Gigabyte per second": lambda value: value / 8e6, 
        "Gibibit per second": lambda value: value / 1.075e6, 
        "Terabit per second": lambda value: value / 1e9, 
        "Terabyte per second": lambda value: value / 8e9, 
        "Tebibit per second": lambda value: value / 1.1e9
    },
    "Kilobyte per second": {
        "Bit per second": lambda value: value * 8000,
        "Kilobit per second": lambda value: value * 8,
        "Kilobyte per second": lambda value: value,
        "Kibibit per second": lambda value: value * 7.812, 
        "Megabit per second": lambda value: value / 125, 
        "Megabyte per second": lambda value: value / 1000, 
        "Mebibit per second": lambda value: value / 131.1, 
        "Gigabit per second": lambda value: value / 125000, 
        "Gigabyte per second": lambda value: value / 1e6, 
        "Gibibit per second": lambda value: value / 134200, 
        "Terabit per second": lambda value: value / 1.25e8, 
        "Terabyte per second": lambda value: value / 1e9, 
        "Tebibit per second": lambda value: value / 1.374e8
    },
    "Kibibit per second": {
        "Bit per second": lambda value: value * 1024,
        "Kilobit per second": lambda value: value * 1.024,
        "Kilobyte per second": lambda value: value / 7.812,
        "Kibibit per second": lambda value: value, 
        "Megabit per second": lambda value: value / 976.6, 
        "Megabyte per second": lambda value: value / 7813, 
        "Mebibit per second": lambda value: value / 1024, 
        "Gigabit per second": lambda value: value / 976600, 
        "Gigabyte per second": lambda value: value / 7.813e6, 
        "Gibibit per second": lambda value: value / 1.049e6, 
        "Terabit per second": lambda value: value / 9.766e8, 
        "Terabyte per second": lambda value: value / 7.813e9, 
        "Tebibit per second": lambda value: value / 1.074e9
    },
    "Megabit per second": {
        "Bit per second": lambda value: value * 1e6,
        "Kilobit per second": lambda value: value * 1000,
        "Kilobyte per second": lambda value: value * 125,
        "Kibibit per second": lambda value: value * 976.6, 
        "Megabit per second": lambda value: value, 
        "Megabyte per second": lambda value: value / 8, 
        "Mebibit per second": lambda value: value / 1.049, 
        "Gigabit per second": lambda value: value / 1000, 
        "Gigabyte per second": lambda value: value / 8000, 
        "Gibibit per second": lambda value: value / 1074, 
        "Terabit per second": lambda value: value / 1e6, 
        "Terabyte per second": lambda value: value / 8e6, 
        "Tebibit per second": lambda value: value / 1.1e6
    },
    "Megabyte per second": {
        "Bit per second": lambda value: value * 8e6,
        "Kilobit per second": lambda value: value * 8000,
        "Kilobyte per second": lambda value: value * 1000,
        "Kibibit per second": lambda value: value * 7813, 
        "Megabit per second": lambda value: value * 8, 
        "Megabyte per second": lambda value: value, 
        "Mebibit per second": lambda value: value * 7.629, 
        "Gigabit per second": lambda value: value / 125, 
        "Gigabyte per second": lambda value: value / 1000, 
        "Gibibit per second": lambda value: value / 134.2, 
        "Terabit per second": lambda value: value / 125000, 
        "Terabyte per second": lambda value: value / 1e6, 
        "Tebibit per second": lambda value: value / 137400
    },
    "Mebibit per second": {
        "Bit per second": lambda value: value * 1.049e6,
        "Kilobit per second": lambda value: value * 1049,
        "Kilobyte per second": lambda value: value * 131.1,
        "Kibibit per second": lambda value: value * 1024, 
        "Megabit per second": lambda value: value * 1.049, 
        "Megabyte per second": lambda value: value / 7.629, 
        "Mebibit per second": lambda value: value, 
        "Gigabit per second": lambda value: value / 953.7, 
        "Gigabyte per second": lambda value: value / 7629, 
        "Gibibit per second": lambda value: value / 1024, 
        "Terabit per second": lambda value: value / 953700, 
        "Terabyte per second": lambda value: value / 7.629e6, 
        "Tebibit per second": lambda value: value / 1.049e6
    },
    "Gigabit per second": {
        "Bit per second": lambda value: value * 1e9,
        "Kilobit per second": lambda value: value * 1e6,
        "Kilobyte per second": lambda value: value * 125000,
        "Kibibit per second": lambda value: value * 976600, 
        "Megabit per second": lambda value: value * 1000, 
        "Megabyte per second": lambda value: value * 125, 
        "Mebibit per second": lambda value: value * 953.7, 
        "Gigabit per second": lambda value: value, 
        "Gigabyte per second": lambda value: value / 8, 
        "Gibibit per second": lambda value: value / 1.074, 
        "Terabit per second": lambda value: value / 1000, 
        "Terabyte per second": lambda value: value / 8000, 
        "Tebibit per second": lambda value: value / 1100
    },
    "Gigabyte per second": {
        "Bit per second": lambda value: value * 8e9,
        "Kilobit per second": lambda value: value * 8e6,
        "Kilobyte per second": lambda value: value * 1e6,
        "Kibibit per second": lambda value: value * 7.813e6, 
        "Megabit per second": lambda value: value * 8000, 
        "Megabyte per second": lambda value: value * 1000, 
        "Mebibit per second": lambda value: value * 7629, 
        "Gigabit per second": lambda value: value * 8, 
        "Gigabyte per second": lambda value: value, 
        "Gibibit per second": lambda value: value * 7.451, 
        "Terabit per second": lambda value: value / 125, 
        "Terabyte per second": lambda value: value / 1000, 
        "Tebibit per second": lambda value: value / 137.4
    },
    "Gibibit per second": {
        "Bit per second": lambda value: value * 1.074e9,
        "Kilobit per second": lambda value: value * 1.074e6,
        "Kilobyte per second": lambda value: value * 134200,
        "Kibibit per second": lambda value: value * 1.049e6, 
        "Megabit per second": lambda value: value * 1074, 
        "Megabyte per second": lambda value: value * 134.2, 
        "Mebibit per second": lambda value: value * 1024, 
        "Gigabit per second": lambda value: value * 1.074, 
        "Gigabyte per second": lambda value: value / 7.451, 
        "Gibibit per second": lambda value: value, 
        "Terabit per second": lambda value: value / 931.3, 
        "Terabyte per second": lambda value: value / 7451, 
        "Tebibit per second": lambda value: value / 1024
    },
    "Terabit per second": {
        "Bit per second": lambda value: value * 1e12,
        "Kilobit per second": lambda value: value * 1e9,
        "Kilobyte per second": lambda value: value * 1.25e8,
        "Kibibit per second": lambda value: value * 9.766e8, 
        "Megabit per second": lambda value: value * 1e6, 
        "Megabyte per second": lambda value: value * 125000, 
        "Mebibit per second": lambda value: value * 953700, 
        "Gigabit per second": lambda value: value * 1000, 
        "Gigabyte per second": lambda value: value * 125, 
        "Gibibit per second": lambda value: value * 931.3, 
        "Terabit per second": lambda value: value, 
        "Terabyte per second": lambda value: value / 8, 
        "Tebibit per second": lambda value: value / 1.1
    },
    "Terabyte per second": {
        "Bit per second": lambda value: value * 8e12,
        "Kilobit per second": lambda value: value * 8e9,
        "Kilobyte per second": lambda value: value * 1e9,
        "Kibibit per second": lambda value: value * 7.813e9, 
        "Megabit per second": lambda value: value * 8e6, 
        "Megabyte per second": lambda value: value * 1e6, 
        "Mebibit per second": lambda value: value * 7.629e6, 
        "Gigabit per second": lambda value: value * 8000, 
        "Gigabyte per second": lambda value: value * 1000, 
        "Gibibit per second": lambda value: value * 7451, 
        "Terabit per second": lambda value: value * 8, 
        "Terabyte per second": lambda value: value, 
        "Tebibit per second": lambda value: value * 7.276
    },
    "Tebibit per second": {
        "Bit per second": lambda value: value * 1.1e12,
        "Kilobit per second": lambda value: value * 1.1e9,
        "Kilobyte per second": lambda value: value * 1.374e8,
        "Kibibit per second": lambda value: value * 1.074e9, 
        "Megabit per second": lambda value: value * 1.1e6, 
        "Megabyte per second": lambda value: value * 137400, 
        "Mebibit per second": lambda value: value * 1.049e6, 
        "Gigabit per second": lambda value: value * 1100, 
        "Gigabyte per second": lambda value: value * 137.4, 
        "Gibibit per second": lambda value: value * 1024, 
        "Terabit per second": lambda value: value * 1.1, 
        "Terabyte per second": lambda value: value / 7.276, 
        "Tebibit per second": lambda value: value
    },
    # Digital Storage
    "Bit": {
        "Bit": lambda value: value,
        "Kilobit": lambda value: value / 1000,
        "Kibibit": lambda value: value / 1024,
        "Megabit": lambda value: value / 1e6,
        "Mebibit": lambda value: value / 1.049e6,
        "Gigabit": lambda value: value / 1e9,
        "Gibibit": lambda value: value / 1.074e9,
        "Terabit": lambda value: value / 1e12,
        "Tebibit": lambda value: value / 1.1e12,
        "Petabit": lambda value: value / 1e15,
        "Pebibit": lambda value: value / 1.126e15,
        "Byte": lambda value: value / 8,
        "Kilobyte": lambda value: value / 8000,
        "Kibibyte": lambda value: value / 8192,
        "Megabyte": lambda value: value / 8e6,
        "Mebibyte": lambda value: value / 8.389e6,
        "Gigabyte": lambda value: value / 8e9,
        "Gibibyte": lambda value: value / 8.59e9,
        "Terabyte": lambda value: value / 8e12,
        "Tebibyte": lambda value: value / 8.796e12,
        "Petabyte": lambda value: value / 8e15,
        "Pebibyte": lambda value: value / 9.007e15
    },
    "Kilobit": {
        "Bit": lambda value: value * 1000,
        "Kilobit": lambda value: value,
        "Kibibit": lambda value: value / 1.024,
        "Megabit": lambda value: value / 1000,
        "Mebibit": lambda value: value / 1049,
        "Gigabit": lambda value: value / 1e6,
        "Gibibit": lambda value: value / 1.074e6,
        "Terabit": lambda value: value / 1e9,
        "Tebibit": lambda value: value / 1.1e9,
        "Petabit": lambda value: value / 1e12,
        "Pebibit": lambda value: value / 1.126e12,
        "Byte": lambda value: value * 125,
        "Kilobyte": lambda value: value / 8,
        "Kibibyte": lambda value: value / 8.192,
        "Megabyte": lambda value: value / 8000,
        "Mebibyte": lambda value: value / 8389,
        "Gigabyte": lambda value: value / 8e6,
        "Gibibyte": lambda value: value / 8.59e6,
        "Terabyte": lambda value: value / 8e9,
        "Tebibyte": lambda value: value / 8.796e9,
        "Petabyte": lambda value: value / 8e12,
        "Pebibyte": lambda value: value / 9.007e12
    },
    "Kibibit": {
        "Bit": lambda value: value * 1024,
        "Kilobit": lambda value: value * 1.024,
        "Kibibit": lambda value: value,
        "Megabit": lambda value: value / 976.6,
        "Mebibit": lambda value: value / 1024,
        "Gigabit": lambda value: value / 976600,
        "Gibibit": lambda value: value / 1.049e6,
        "Terabit": lambda value: value / 9.766e8,
        "Tebibit": lambda value: value / 1.074e9,
        "Petabit": lambda value: value / 9.766e11,
        "Pebibit": lambda value: value / 1.1e12,
        "Byte": lambda value: value * 128,
        "Kilobyte": lambda value: value / 7.812,
        "Kibibyte": lambda value: value / 8,
        "Megabyte": lambda value: value / 7813,
        "Mebibyte": lambda value: value / 8192,
        "Gigabyte": lambda value: value / 7.81e6,
        "Gibibyte": lambda value: value / 8.389e6,
        "Terabyte": lambda value: value / 7.813e9,
        "Tebibyte": lambda value: value / 8.59e9,
        "Petabyte": lambda value: value / 7.812e12,
        "Pebibyte": lambda value: value / 8.796e12
    },
    "Megabit": {
        "Bit": lambda value: value * 1e6,
        "Kilobit": lambda value: value * 1000,
        "Kibibit": lambda value: value * 976.6,
        "Megabit": lambda value: value,
        "Mebibit": lambda value: value / 1.049,
        "Gigabit": lambda value: value / 1000,
        "Gibibit": lambda value: value / 1074,
        "Terabit": lambda value: value / 1e6,
        "Tebibit": lambda value: value / 1.1e6,
        "Petabit": lambda value: value / 1e9,
        "Pebibit": lambda value: value / 1.126e9,
        "Byte": lambda value: value * 125000,
        "Kilobyte": lambda value: value * 125,
        "Kibibyte": lambda value: value * 122.1,
        "Megabyte": lambda value: value / 8,
        "Mebibyte": lambda value: value / 8.389,
        "Gigabyte": lambda value: value / 8000,
        "Gibibyte": lambda value: value / 8590,
        "Terabyte": lambda value: value / 8e6,
        "Tebibyte": lambda value: value / 8.796e6,
        "Petabyte": lambda value: value / 8e9,
        "Pebibyte": lambda value: value / 9.007e9
    },
    "Mebibit": {
        "Bit": lambda value: value * 1.049e6,
        "Kilobit": lambda value: value * 1049,
        "Kibibit": lambda value: value * 1024,
        "Megabit": lambda value: value * 1.049,
        "Mebibit": lambda value: value,
        "Gigabit": lambda value: value / 953.7,
        "Gibibit": lambda value: value / 1024,
        "Terabit": lambda value: value / 953700,
        "Tebibit": lambda value: value / 1.049e6,
        "Petabit": lambda value: value / 9.537e8,
        "Pebibit": lambda value: value / 1.074e9,
        "Byte": lambda value: value * 131100,
        "Kilobyte": lambda value: value * 131.1,
        "Kibibyte": lambda value: value * 128,
        "Megabyte": lambda value: value / 7.629,
        "Mebibyte": lambda value: value / 8,
        "Gigabyte": lambda value: value / 7629,
        "Gibibyte": lambda value: value / 8192,
        "Terabyte": lambda value: value / 7.629e6,
        "Tebibyte": lambda value: value / 8.389e6,
        "Petabyte": lambda value: value / 7.629e9,
        "Pebibyte": lambda value: value / 8.59e9
    },
    "Gigabit": {
        "Bit": lambda value: value * 1e9,
        "Kilobit": lambda value: value * 1e6,
        "Kibibit": lambda value: value * 976600,
        "Megabit": lambda value: value * 1000,
        "Mebibit": lambda value: value * 953.7,
        "Gigabit": lambda value: value,
        "Gibibit": lambda value: value / 1.074,
        "Terabit": lambda value: value / 1000,
        "Tebibit": lambda value: value / 1100,
        "Petabit": lambda value: value / 1e6,
        "Pebibit": lambda value: value / 1.126e6,
        "Byte": lambda value: value * 1.25e8,
        "Kilobyte": lambda value: value * 125000,
        "Kibibyte": lambda value: value * 122100,
        "Megabyte": lambda value: value * 125,
        "Mebibyte": lambda value: value * 119.2,
        "Gigabyte": lambda value: value / 8,
        "Gibibyte": lambda value: value / 8.59,
        "Terabyte": lambda value: value / 8000,
        "Tebibyte": lambda value: value / 8796,
        "Petabyte": lambda value: value / 8e6,
        "Pebibyte": lambda value: value / 9.007e6  
    },
    "Gibibit": {
        "Bit": lambda value: value * 1.074e9,
        "Kilobit": lambda value: value * 1.074e6,
        "Kibibit": lambda value: value * 1.049e6,
        "Megabit": lambda value: value * 1074,
        "Mebibit": lambda value: value * 1024,
        "Gigabit": lambda value: value * 1.074,
        "Gibibit": lambda value: value,
        "Terabit": lambda value: value / 931.3,
        "Tebibit": lambda value: value / 1024,
        "Petabit": lambda value: value / 931300,
        "Pebibit": lambda value: value / 1.049e6,
        "Byte": lambda value: value * 1.342e8,
        "Kilobyte": lambda value: value * 134200,
        "Kibibyte": lambda value: value * 131100,
        "Megabyte": lambda value: value * 134.2,
        "Mebibyte": lambda value: value * 128,
        "Gigabyte": lambda value: value / 7.451,
        "Gibibyte": lambda value: value / 8,
        "Terabyte": lambda value: value / 7451,
        "Tebibyte": lambda value: value / 8192,
        "Petabyte": lambda value: value / 7.451e6,
        "Pebibyte": lambda value: value / 8.389e6
    },
    "Terabit": {
        "Bit": lambda value: value * 1e12,
        "Kilobit": lambda value: value * 1e9,
        "Kibibit": lambda value: value * 9.766e8,
        "Megabit": lambda value: value * 1e6,
        "Mebibit": lambda value: value * 953700,
        "Gigabit": lambda value: value * 1000,
        "Gibibit": lambda value: value * 931.3,
        "Terabit": lambda value: value,
        "Tebibit": lambda value: value / 1.1,
        "Petabit": lambda value: value / 1000,
        "Pebibit": lambda value: value / 1126,
        "Byte": lambda value: value * 1.25e11,
        "Kilobyte": lambda value: value * 1.25e8,
        "Kibibyte": lambda value: value * 1.221e8,
        "Megabyte": lambda value: value * 125000,
        "Mebibyte": lambda value: value * 119200,
        "Gigabyte": lambda value: value * 125,
        "Gibibyte": lambda value: value * 116.4,
        "Terabyte": lambda value: value / 8,
        "Tebibyte": lambda value: value / 8.796,
        "Petabyte": lambda value: value / 8000,
        "Pebibyte": lambda value: value / 9007
    },
    "Tebibit": {
        "Bit": lambda value: value * 1.1e12,
        "Kilobit": lambda value: value * 1.1e9,
        "Kibibit": lambda value: value * 1.075e9,
        "Megabit": lambda value: value * 1.1e6,
        "Mebibit": lambda value: value * 1.049e6,
        "Gigabit": lambda value: value * 1100,
        "Gibibit": lambda value: value * 1024,
        "Terabit": lambda value: value * 1.1,
        "Tebibit": lambda value: value,
        "Petabit": lambda value: value / 909.5,
        "Pebibit": lambda value: value / 1024,
        "Byte": lambda value: value * 1.374e11,
        "Kilobyte": lambda value: value * 1.374e8,
        "Kibibyte": lambda value: value * 1.342e8,
        "Megabyte": lambda value: value * 137400,
        "Mebibyte": lambda value: value * 131100,
        "Gigabyte": lambda value: value * 137.4,
        "Gibibyte": lambda value: value * 128,
        "Terabyte": lambda value: value / 7.276,
        "Tebibyte": lambda value: value / 8,
        "Petabyte": lambda value: value / 7276,
        "Pebibyte": lambda value: value / 8192
    },
    "Petabit": {
        "Bit": lambda value: value * 1e15,
        "Kilobit": lambda value: value * 1e12,
        "Kibibit": lambda value: value * 9.766e11,
        "Megabit": lambda value: value * 1e9,
        "Mebibit": lambda value: value * 9.537e8,
        "Gigabit": lambda value: value * 1e6,
        "Gibibit": lambda value: value * 931300,
        "Terabit": lambda value: value * 1000,
        "Tebibit": lambda value: value * 909.5,
        "Petabit": lambda value: value,
        "Pebibit": lambda value: value / 1.126,
        "Byte": lambda value: value * 1.25e14,
        "Kilobyte": lambda value: value * 1.25e11,
        "Kibibyte": lambda value: value * 1.221e11,
        "Megabyte": lambda value: value * 1.25e8,
        "Mebibyte": lambda value: value * 1.192e8,
        "Gigabyte": lambda value: value * 125000,
        "Gibibyte": lambda value: value * 116400,
        "Terabyte": lambda value: value * 125,
        "Tebibyte": lambda value: value * 113.7,
        "Petabyte": lambda value: value / 8,
        "Pebibyte": lambda value: value / 9.007
    },
    "Pebibit": {
        "Bit": lambda value: value * 1.126e15,
        "Kilobit": lambda value: value * 1.126e12,
        "Kibibit": lambda value: value * 1.1e12,
        "Megabit": lambda value: value * 1.126e9,
        "Mebibit": lambda value: value * 1.074e9,
        "Gigabit": lambda value: value * 1.126e6,
        "Gibibit": lambda value: value * 1.049e6,
        "Terabit": lambda value: value * 1126,
        "Tebibit": lambda value: value * 1024,
        "Petabit": lambda value: value * 1.126,
        "Pebibit": lambda value: value,
        "Byte": lambda value: value * 1.407e14,
        "Kilobyte": lambda value: value * 1.407e11,
        "Kibibyte": lambda value: value * 1.374e11,
        "Megabyte": lambda value: value * 1.407e8,
        "Mebibyte": lambda value: value * 1.342e8,
        "Gigabyte": lambda value: value * 140700,
        "Gibibyte": lambda value: value * 131100,
        "Terabyte": lambda value: value * 140.7,
        "Tebibyte": lambda value: value * 128,
        "Petabyte": lambda value: value / 7.105,
        "Pebibyte": lambda value: value / 8
    },
    "Byte": {
        "Bit": lambda value: value * 8,
        "Kilobit": lambda value: value / 125,
        "Kibibit": lambda value: value / 128,
        "Megabit": lambda value: value / 125000,
        "Mebibit": lambda value: value / 131100,
        "Gigabit": lambda value: value / 1.25e8,
        "Gibibit": lambda value: value / 1.342e8,
        "Terabit": lambda value: value / 1.25e11,
        "Tebibit": lambda value: value / 1.374e11,
        "Petabit": lambda value: value / 1.25e14,
        "Pebibit": lambda value: value / 1.407e14,
        "Byte": lambda value: value,
        "Kilobyte": lambda value: value / 1000,
        "Kibibyte": lambda value: value / 1024,
        "Megabyte": lambda value: value / 1e6,
        "Mebibyte": lambda value: value / 1.049e6,
        "Gigabyte": lambda value: value / 1e9,
        "Gibibyte": lambda value: value / 1.074e9,
        "Terabyte": lambda value: value / 1e12,
        "Tebibyte": lambda value: value / 1.1e12,
        "Petabyte": lambda value: value / 1e15,
        "Pebibyte": lambda value: value / 1.126e15
    },
    "Kilobyte": {
        "Bit": lambda value: value * 8000,
        "Kilobit": lambda value: value * 8,
        "Kibibit": lambda value: value * 7.812,
        "Megabit": lambda value: value / 125,
        "Mebibit": lambda value: value / 131.1,
        "Gigabit": lambda value: value / 125000,
        "Gibibit": lambda value: value / 134200,
        "Terabit": lambda value: value / 1.25e8,
        "Tebibit": lambda value: value / 1.374e8,
        "Petabit": lambda value: value / 1.25e11,
        "Pebibit": lambda value: value / 1.407e11,
        "Byte": lambda value: value * 1000,
        "Kilobyte": lambda value: value,
        "Kibibyte": lambda value: value / 1.024,
        "Megabyte": lambda value: value / 1000,
        "Mebibyte": lambda value: value / 1049,
        "Gigabyte": lambda value: value / 1e6,
        "Gibibyte": lambda value: value / 1.074e6,
        "Terabyte": lambda value: value / 1e9,
        "Tebibyte": lambda value: value / 1.1e9,
        "Petabyte": lambda value: value / 1e12,
        "Pebibyte": lambda value: value / 1.126e12
    },
    "Kibibyte": {
        "Bit": lambda value: value * 8192,
        "Kilobit": lambda value: value * 8.192,
        "Kibibit": lambda value: value * 8,
        "Megabit": lambda value: value / 122.1,
        "Mebibit": lambda value: value / 128,
        "Gigabit": lambda value: value / 122100,
        "Gibibit": lambda value: value / 131100,
        "Terabit": lambda value: value / 1.221e8,
        "Tebibit": lambda value: value / 1.342e8,
        "Petabit": lambda value: value / 1.221e11,
        "Pebibit": lambda value: value / 1.374e11,
        "Byte": lambda value: value * 1024,
        "Kilobyte": lambda value: value * 1.024,
        "Kibibyte": lambda value: value,
        "Megabyte": lambda value: value / 976.6,
        "Mebibyte": lambda value: value / 1024,
        "Gigabyte": lambda value: value / 976600,
        "Gibibyte": lambda value: value / 1.049e6,
        "Terabyte": lambda value: value / 9.766e8,
        "Tebibyte": lambda value: value / 1.074e9,
        "Petabyte": lambda value: value / 9.766e11,
        "Pebibyte": lambda value: value / 1.1e12
    },
    "Megabyte": {
        "Bit": lambda value: value * 8e6,
        "Kilobit": lambda value: value * 8000,
        "Kibibit": lambda value: value * 7813,
        "Megabit": lambda value: value * 8,
        "Mebibit": lambda value: value * 7.629,
        "Gigabit": lambda value: value / 125,
        "Gibibit": lambda value: value / 134.2,
        "Terabit": lambda value: value / 125000,
        "Tebibit": lambda value: value / 137400,
        "Petabit": lambda value: value / 1.25e8,
        "Pebibit": lambda value: value / 1.407e8,
        "Byte": lambda value: value * 1e6,
        "Kilobyte": lambda value: value * 1000,
        "Kibibyte": lambda value: value * 976.6,
        "Megabyte": lambda value: value,
        "Mebibyte": lambda value: value / 1.049,
        "Gigabyte": lambda value: value / 1000,
        "Gibibyte": lambda value: value / 1074,
        "Terabyte": lambda value: value / 1e6,
        "Tebibyte": lambda value: value / 1.1e6,
        "Petabyte": lambda value: value / 1e9,
        "Pebibyte": lambda value: value / 1.126e9
    },
    "Mebibyte": {
        "Bit": lambda value: value * 8.389e6,
        "Kilobit": lambda value: value * 8389,
        "Kibibit": lambda value: value * 8192,
        "Megabit": lambda value: value * 8.389,
        "Mebibit": lambda value: value * 8,
        "Gigabit": lambda value: value / 119.2,
        "Gibibit": lambda value: value / 128,
        "Terabit": lambda value: value / 119200,
        "Tebibit": lambda value: value / 131100,
        "Petabit": lambda value: value / 1.192e8,
        "Pebibit": lambda value: value / 1.342e8,
        "Byte": lambda value: value * 1.049e6,
        "Kilobyte": lambda value: value * 1049,
        "Kibibyte": lambda value: value * 1024,
        "Megabyte": lambda value: value * 1.049,
        "Mebibyte": lambda value: value,
        "Gigabyte": lambda value: value / 953.7,
        "Gibibyte": lambda value: value / 1024,
        "Terabyte": lambda value: value / 953700,
        "Tebibyte": lambda value: value / 1.049e6,
        "Petabyte": lambda value: value / 9.537e8,
        "Pebibyte": lambda value: value / 1.074e9
    },
    "Gigabyte": {
        "Bit": lambda value: value * 8e9,
        "Kilobit": lambda value: value * 8e6,
        "Kibibit": lambda value: value * 7.813e6,
        "Megabit": lambda value: value * 8000,
        "Mebibit": lambda value: value * 7629,
        "Gigabit": lambda value: value * 8,
        "Gibibit": lambda value: value * 7.451,
        "Terabit": lambda value: value / 125,
        "Tebibit": lambda value: value / 137.4,
        "Petabit": lambda value: value / 125000,
        "Pebibit": lambda value: value / 140700,
        "Byte": lambda value: value * 1e9,
        "Kilobyte": lambda value: value * 1e6,
        "Kibibyte": lambda value: value * 976600,
        "Megabyte": lambda value: value * 1000,
        "Mebibyte": lambda value: value * 953.7,
        "Gigabyte": lambda value: value,
        "Gibibyte": lambda value: value / 1.074,
        "Terabyte": lambda value: value / 1000,
        "Tebibyte": lambda value: value / 1100,
        "Petabyte": lambda value: value / 1e6,
        "Pebibyte": lambda value: value /1.126e6
    },
    "Gibibyte": {
        "Bit": lambda value: value * 8.59e9,
        "Kilobit": lambda value: value * 8.59e6,
        "Kibibit": lambda value: value * 8.389e6,
        "Megabit": lambda value: value * 8590,
        "Mebibit": lambda value: value * 8192,
        "Gigabit": lambda value: value * 8.59,
        "Gibibit": lambda value: value * 8,
        "Terabit": lambda value: value / 116.4,
        "Tebibit": lambda value: value / 128,
        "Petabit": lambda value: value / 116400,
        "Pebibit": lambda value: value / 131100,
        "Byte": lambda value: value * 1.074e9,
        "Kilobyte": lambda value: value * 1.074e6,
        "Kibibyte": lambda value: value * 1.049e6,
        "Megabyte": lambda value: value * 1074,
        "Mebibyte": lambda value: value * 1024,
        "Gigabyte": lambda value: value * 1.074,
        "Gibibyte": lambda value: value,
        "Terabyte": lambda value: value / 931.3,
        "Tebibyte": lambda value: value / 1024,
        "Petabyte": lambda value: value / 931300,
        "Pebibyte": lambda value: value / 1.049e6
    },
    "Terabyte": {
        "Bit": lambda value: value * 8e12,
        "Kilobit": lambda value: value * 8e9,
        "Kibibit": lambda value: value * 7.813e9,
        "Megabit": lambda value: value * 8e6,
        "Mebibit": lambda value: value * 7.629e6,
        "Gigabit": lambda value: value * 8000,
        "Gibibit": lambda value: value * 7451,
        "Terabit": lambda value: value * 8,
        "Tebibit": lambda value: value * 7.276,
        "Petabit": lambda value: value / 125,
        "Pebibit": lambda value: value / 140.7,
        "Byte": lambda value: value * 1e12,
        "Kilobyte": lambda value: value * 1e9,
        "Kibibyte": lambda value: value * 9.766e8,
        "Megabyte": lambda value: value * 1e6,
        "Mebibyte": lambda value: value * 953700,
        "Gigabyte": lambda value: value * 1000,
        "Gibibyte": lambda value: value * 931.3,
        "Terabyte": lambda value: value,
        "Tebibyte": lambda value: value / 1.1,
        "Petabyte": lambda value: value / 1000,
        "Pebibyte": lambda value: value / 1126
    },
    "Tebibyte": {
        "Bit": lambda value: value * 8.796e12,
        "Kilobit": lambda value: value * 8.796e9,
        "Kibibit": lambda value: value * 8.59e9,
        "Megabit": lambda value: value * 8.796e6,
        "Mebibit": lambda value: value * 8.389e6,
        "Gigabit": lambda value: value * 8796,
        "Gibibit": lambda value: value * 8192,
        "Terabit": lambda value: value * 8.796,
        "Tebibit": lambda value: value * 8,
        "Petabit": lambda value: value / 113.7,
        "Pebibit": lambda value: value / 128,
        "Byte": lambda value: value * 1.1e12,
        "Kilobyte": lambda value: value * 1.1e9,
        "Kibibyte": lambda value: value * 1.074e9,
        "Megabyte": lambda value: value * 1.1e6,
        "Mebibyte": lambda value: value * 1.049e6,
        "Gigabyte": lambda value: value * 1100,
        "Gibibyte": lambda value: value * 1024,
        "Terabyte": lambda value: value * 1.1,
        "Tebibyte": lambda value: value,
        "Petabyte": lambda value: value / 909.5,
        "Pebibyte": lambda value: value / 1024
    },
    "Petabyte": {
        "Bit": lambda value: value * 8e15,
        "Kilobit": lambda value: value * 8e12,
        "Kibibit": lambda value: value * 7.813e12,
        "Megabit": lambda value: value * 8e9,
        "Mebibit": lambda value: value * 7.629e9,
        "Gigabit": lambda value: value * 8e6,
        "Gibibit": lambda value: value * 7.451e6,
        "Terabit": lambda value: value * 8000,
        "Tebibit": lambda value: value * 7276,
        "Petabit": lambda value: value * 8,
        "Pebibit": lambda value: value * 7.105,
        "Byte": lambda value: value * 1e15,
        "Kilobyte": lambda value: value * 1e12,
        "Kibibyte": lambda value: value * 9.766e11,
        "Megabyte": lambda value: value * 1e9,
        "Mebibyte": lambda value: value * 9.537e8,
        "Gigabyte": lambda value: value * 1e6,
        "Gibibyte": lambda value: value * 931300,
        "Terabyte": lambda value: value * 1000,
        "Tebibyte": lambda value: value * 909.5,
        "Petabyte": lambda value: value,
        "Pebibyte": lambda value: value / 1.126
    },
    "Pebibyte": {
        "Bit": lambda value: value * 9.007e15,
        "Kilobit": lambda value: value * 9.007e12,
        "Kibibit": lambda value: value * 8.796e12,
        "Megabit": lambda value: value * 9.007e9,
        "Mebibit": lambda value: value * 8.59e9,
        "Gigabit": lambda value: value * 9.007e6,
        "Gibibit": lambda value: value * 8.389e6,
        "Terabit": lambda value: value * 9007,
        "Tebibit": lambda value: value * 8192,
        "Petabit": lambda value: value * 9.007,
        "Pebibit": lambda value: value * 8,
        "Byte": lambda value: value * 1.126e15,
        "Kilobyte": lambda value: value * 1.126e12,
        "Kibibyte": lambda value: value * 1.1e12,
        "Megabyte": lambda value: value * 1.126e9,
        "Mebibyte": lambda value: value * 1.074e9,
        "Gigabyte": lambda value: value * 1.126e6,
        "Gibibyte": lambda value: value * 1.049e6,
        "Terabyte": lambda value: value * 1126,
        "Tebibyte": lambda value: value * 1024,
        "Petabyte": lambda value: value * 1.126,
        "Pebibyte": lambda value: value
    },
    # ENERGY
    "Joule": {
        "Joule": lambda value: value,
        "Kilojoule": lambda value: value / 1000,
        "Gram calorie": lambda value: value / 4.184,
        "Kilocalorie": lambda value: value / 4184,
        "Watt hour": lambda value: value / 3600,
        "Kilowatt hour": lambda value: value / 3.6e6,
        "Electronvolt": lambda value: value * 6.242e18,
        "British thermal unit": lambda value: value / 1055,
        "US therm": lambda value: value / 1.055e8,
        "Foot-pound": lambda value: value / 1.356
    },
    "Kilojoule": {
        "Joule": lambda value: value * 1000,
        "Kilojoule": lambda value: value,
        "Gram calorie": lambda value: value * 239,
        "Kilocalorie": lambda value: value / 4.184,
        "Watt hour": lambda value: value / 3.6,
        "Kilowatt hour": lambda value: value / 3600,
        "Electronvolt": lambda value: value * 6.242e21,
        "British thermal unit": lambda value: value / 1.055,
        "US therm": lambda value: value / 105500,
        "Foot-pound": lambda value: value * 737.6
    },
    "Gram calorie": {
        "Joule": lambda value: value * 4.184,
        "Kilojoule": lambda value: value / 239,
        "Gram calorie": lambda value: value,
        "Kilocalorie": lambda value: value / 1000,
        "Watt hour": lambda value: value / 860.4,
        "Kilowatt hour": lambda value: value / 860400,
        "Electronvolt": lambda value: value * 2.611e19,
        "British thermal unit": lambda value: value / 252.2,
        "US therm": lambda value: value / 2.521e7,
        "Foot-pound": lambda value: value * 3.086
    },
    "Kilocalorie": {
        "Joule": lambda value: value * 4184,
        "Kilojoule": lambda value: value * 4.184,
        "Gram calorie": lambda value: value * 1000,
        "Kilocalorie": lambda value: value,
        "Watt hour": lambda value: value * 1.162,
        "Kilowatt hour": lambda value: value / 860.4,
        "Electronvolt": lambda value: value * 2.611e22,
        "British thermal unit": lambda value: value * 3.966,
        "US therm": lambda value: value / 25210,
        "Foot-pound": lambda value: value * 3086
    },
    "Watt hour": {
        "Joule": lambda value: value * 3600,
        "Kilojoule": lambda value: value * 3.6,
        "Gram calorie": lambda value: value * 860.4,
        "Kilocalorie": lambda value: value / 1.162,
        "Watt hour": lambda value: value,
        "Kilowatt hour": lambda value: value / 1000,
        "Electronvolt": lambda value: value * 2.247e22,
        "British thermal unit": lambda value: value * 3.412,
        "US therm": lambda value: value / 29300,
        "Foot-pound": lambda value: value * 2655
    },
    "Kilowatt hour": {
        "Joule": lambda value: value * 3.6e6,
        "Kilojoule": lambda value: value * 3600,
        "Gram calorie": lambda value: value * 860400,
        "Kilocalorie": lambda value: value * 860.4,
        "Watt hour": lambda value: value * 1000,
        "Kilowatt hour": lambda value: value,
        "Electronvolt": lambda value: value * 2.247e25,
        "British thermal unit": lambda value: value * 3412,
        "US therm": lambda value: value / 29.3,
        "Foot-pound": lambda value: value * 2.655e6
    },
    "Electronvolt": {
        "Joule": lambda value: value / 6.242e18,
        "Kilojoule": lambda value: value / 6.242e21,
        "Gram calorie": lambda value: value / 2.611e19,
        "Kilocalorie": lambda value: value / 2.611e22,
        "Watt hour": lambda value: value / 2.247e22,
        "Kilowatt hour": lambda value: value / 2.247e25,
        "Electronvolt": lambda value: value,
        "British thermal unit": lambda value: value / 6.585e21,
        "US therm": lambda value: value / 6.584e26,
        "Foot-pound": lambda value: value / 8.462e18
    },
    "British thermal unit": {
        "Joule": lambda value: value * 1055,
        "Kilojoule": lambda value: value * 1.055,
        "Gram calorie": lambda value: value * 252.2,
        "Kilocalorie": lambda value: value / 3.966,
        "Watt hour": lambda value: value / 3.412,
        "Kilowatt hour": lambda value: value / 3412,
        "Electronvolt": lambda value: value * 6.585e21,
        "British thermal unit": lambda value: value,
        "US therm": lambda value: value / 99980,
        "Foot-pound": lambda value: value * 778.2
    },
    "US therm": {
        "Joule": lambda value: value * 1.055e8,
        "Kilojoule": lambda value: value * 105500,
        "Gram calorie": lambda value: value * 2.521e7,
        "Kilocalorie": lambda value: value * 25210,
        "Watt hour": lambda value: value * 29300,
        "Kilowatt hour": lambda value: value * 29.3,
        "Electronvolt": lambda value: value * 6.584e26,
        "British thermal unit": lambda value: value * 99980,
        "US therm": lambda value: value,
        "Foot-pound": lambda value: value * 7.78e7 
    },
    "Foot-pound": {
        "Joule": lambda value: value * 1.356,
        "Kilojoule": lambda value: value / 737.6,
        "Gram calorie": lambda value: value / 3.086,
        "Kilocalorie": lambda value: value / 3086,
        "Watt hour": lambda value: value / 2655,
        "Kilowatt hour": lambda value: value / 2.655e6,
        "Electronvolt": lambda value: value * 8.462e18,
        "British thermal unit": lambda value: value / 778.2,
        "US therm": lambda value: value / 7.78e7,
        "Foot-pound": lambda value: value
    },
    # FREQUENCY
    "Hertz": {
        "Hertz": lambda value: value,
        "Kilohertz": lambda value: value / 1000,
        "Megahertz": lambda value: value / 1e6,
        "Gigahertz": lambda value: value / 1e9
    },
    "Kilohertz": {
        "Hertz": lambda value: value * 1000,
        "Kilohertz": lambda value: value,
        "Megahertz": lambda value: value / 1000,
        "Gigahertz": lambda value: value / 1e6
    },
    "Megahertz": {
        "Hertz": lambda value: value * 1e6,
        "Kilohertz": lambda value: value * 1000,
        "Megahertz": lambda value: value,
        "Gigahertz": lambda value: value / 1000
    },
    "Gigahertz": {
        "Hertz": lambda value: value * 1e9,
        "Kilohertz": lambda value: value * 1e6,
        "Megahertz": lambda value: value * 1000,
        "Gigahertz": lambda value: value 
    },
    # FUEL ECONOMY
    "Miles per gallon": {
       "Miles per gallon": lambda value: value,  
       "Miles per gallon (Imperial)": lambda value: value * 1.201,
       "Kilometer per liter": lambda value: value / 2.352,
       "Liter per 100 kilometers": lambda value: 235.215 / value
    },
    "Miles per gallon (Imperial)": {
       "Miles per gallon": lambda value: value / 1.201,
       "Miles per gallon (Imperial)": lambda value: value,
       "Kilometer per liter": lambda value: value / 2.825,
       "Liter per 100 kilometers": lambda value: 282.481 / value
    },
    "Kilometer per liter": {
       "Miles per gallon": lambda value: value * 2.352,
       "Miles per gallon (Imperial)": lambda value: value * 2.825,
       "Kilometer per liter": lambda value: value,
       "Liter per 100 kilometers": lambda value: 100 / value 
    },
    "Liter per 100 kilometers": {
       "Miles per gallon": lambda value: 235.215 / value,
       "Miles per gallon (Imperial)": lambda value: 282.481 / value,
       "Kilometer per liter": lambda value: 100 / value,
       "Liter per 100 kilometers": lambda value: value
    },
    # LENGTH
    "Kilometer": {
        "Kilometer": lambda value: value,
        "Meter": lambda value: value * 1000,
        "Centimeter": lambda value: value * 100000,
        "Millimeter": lambda value: value * 1e6,
        "Micrometer": lambda value: value * 1e9,
        "Nanometer": lambda value: value * 1e12,
        "Mile": lambda value: value / 1.609,
        "Yard": lambda value: value * 1094,
        "Foot": lambda value: value * 3281,
        "Inch": lambda value: value * 39370,
        "Nautical Mile": lambda value: value / 1.852
    },
    "Meter": {
        "Kilometer": lambda value: value / 1000,
        "Meter": lambda value: value,
        "Centimeter": lambda value: value * 100,
        "Millimeter": lambda value: value * 1000,
        "Micrometer": lambda value: value * 1e6,
        "Nanometer": lambda value: value * 1e9,
        "Mile": lambda value: value / 1609,
        "Yard": lambda value: value * 1.094,
        "Foot": lambda value: value * 3.281,
        "Inch": lambda value: value * 39.37,
        "Nautical Mile": lambda value: value / 1852
    },
    "Centimeter": {
        "Kilometer": lambda value: value / 100000,
        "Meter": lambda value: value / 100,
        "Centimeter": lambda value: value,
        "Millimeter": lambda value: value * 10,
        "Micrometer": lambda value: value * 10000,
        "Nanometer": lambda value: value * 1e7,
        "Mile": lambda value: value / 160900,
        "Yard": lambda value: value / 91.44,
        "Foot": lambda value: value / 30.48,
        "Inch": lambda value: value / 2.54,
        "Nautical Mile": lambda value: value / 185200
    },
    "Millimeter": {
        "Kilometer": lambda value: value / 1e6,
        "Meter": lambda value: value / 1000,
        "Centimeter": lambda value: value / 10,
        "Millimeter": lambda value: value,
        "Micrometer": lambda value: value * 1000,
        "Nanometer": lambda value: value * 1e6,
        "Mile": lambda value: value / 1.609e6,
        "Yard": lambda value: value / 914.4,
        "Foot": lambda value: value / 304.8,
        "Inch": lambda value: value / 25.4,
        "Nautical Mile": lambda value: value / 1.852e6
    },
    "Micrometer": {
        "Kilometer": lambda value: value / 1e9,
        "Meter": lambda value: value / 1e6,
        "Centimeter": lambda value: value / 10000,
        "Millimeter": lambda value: value / 1000,
        "Micrometer": lambda value: value,
        "Nanometer": lambda value: value * 1000,
        "Mile": lambda value: value / 1.609e9,
        "Yard": lambda value: value / 914400,
        "Foot": lambda value: value / 304800,
        "Inch": lambda value: value / 25400,
        "Nautical Mile": lambda value: value / 1.852e9
    },
    "Nanometer": {
        "Kilometer": lambda value: value / 1e12,
        "Meter": lambda value: value / 1e9,
        "Centimeter": lambda value: value / 1e7,
        "Millimeter": lambda value: value / 1e6,
        "Micrometer": lambda value: value / 1000,
        "Nanometer": lambda value: value,
        "Mile": lambda value: value / 1.609e12,
        "Yard": lambda value: value / 9.144e8,
        "Foot": lambda value: value / 3.048e8,
        "Inch": lambda value: value / 2.54e7,
        "Nautical Mile": lambda value: value / 1.852e12
    },
    "Mile": {
        "Kilometer": lambda value: value * 1.609,
        "Meter": lambda value: value * 1609,
        "Centimeter": lambda value: value * 160900,
        "Millimeter": lambda value: value * 1.609e6,
        "Micrometer": lambda value: value * 1.609e9,
        "Nanometer": lambda value: value * 1.609e12,
        "Mile": lambda value: value,
        "Yard": lambda value: value * 1760,
        "Foot": lambda value: value * 5280,
        "Inch": lambda value: value * 63360,
        "Nautical Mile": lambda value: value / 1.151
    },
    "Yard": {
        "Kilometer": lambda value: value / 1094,
        "Meter": lambda value: value / 1.094,
        "Centimeter": lambda value: value * 91.44,
        "Millimeter": lambda value: value * 914.4,
        "Micrometer": lambda value: value * 914400,
        "Nanometer": lambda value: value * 9.144e8,
        "Mile": lambda value: value / 1760,
        "Yard": lambda value: value,
        "Foot": lambda value: value * 3,
        "Inch": lambda value: value * 36,
        "Nautical Mile": lambda value: value / 2025
    },
    "Foot": {
        "Kilometer": lambda value: value / 3281,
        "Meter": lambda value: value / 3.281,
        "Centimeter": lambda value: value * 30.48,
        "Millimeter": lambda value: value * 304.8,
        "Micrometer": lambda value: value * 304800,
        "Nanometer": lambda value: value * 3.048e8,
        "Mile": lambda value: value / 5280,
        "Yard": lambda value: value / 3,
        "Foot": lambda value: value,
        "Inch": lambda value: value * 12,
        "Nautical Mile": lambda value: value / 6076
    },
    "Inch": {
        "Kilometer": lambda value: value / 39370,
        "Meter": lambda value: value / 39.37,
        "Centimeter": lambda value: value * 2.54,
        "Millimeter": lambda value: value * 25.4,
        "Micrometer": lambda value: value * 25400,
        "Nanometer": lambda value: value * 2.54e7,
        "Mile": lambda value: value / 63360,
        "Yard": lambda value: value / 36,
        "Foot": lambda value: value / 12,
        "Inch": lambda value: value,
        "Nautical Mile": lambda value: value / 72910 
    },
    "Nautical Mile": {
        "Kilometer": lambda value: value * 1.852,
        "Meter": lambda value: value * 1852,
        "Centimeter": lambda value: value * 185200,
        "Millimeter": lambda value: value * 1.852e6,
        "Micrometer": lambda value: value * 1.852e9,
        "Nanometer": lambda value: value * 1.852e12,
        "Mile": lambda value: value * 1.151,
        "Yard": lambda value: value * 2025,
        "Foot": lambda value: value * 6076,
        "Inch": lambda value: value * 72910,
        "Nautical Mile": lambda value: value
    },
    #MASS
    "Metric ton": {
        "Metric ton": lambda value: value,
        "Kilogram": lambda value: value * 1000,
        "Gram": lambda value: value * 1e6,
        "Milligram": lambda value: value * 1e9,
        "Microgram": lambda value: value * 1e12,
        "Imperial ton": lambda value: value / 1.016,
        "US ton": lambda value: value * 1.102,
        "Stone": lambda value: value * 157.5,
        "Pound": lambda value: value * 2205,
        "Ounce": lambda value: value * 35270
    },
    "Kilogram": {
        "Metric ton": lambda value: value / 1000,
        "Kilogram": lambda value: value,
        "Gram": lambda value: value * 1000,
        "Milligram": lambda value: value * 1e6,
        "Microgram": lambda value: value * 1e9,
        "Imperial ton": lambda value: value / 1016,
        "US ton": lambda value: value / 907.2,
        "Stone": lambda value: value / 6.35,
        "Pound": lambda value: value * 2.205,
        "Ounce": lambda value: value * 35.274
    },
    "Gram": {
        "Metric ton": lambda value: value / 1e6,
        "Kilogram": lambda value: value / 1000,
        "Gram": lambda value: value,
        "Milligram": lambda value: value * 1000,
        "Microgram": lambda value: value * 1e6,
        "Imperial ton": lambda value: value / 1.016e6,
        "US ton": lambda value: value / 907200,
        "Stone": lambda value: value / 6350,
        "Pound": lambda value: value / 453.6,
        "Ounce": lambda value: value / 28.35
    },
    "Milligram": {
        "Metric ton": lambda value: value / 1e9,
        "Kilogram": lambda value: value / 1e6,
        "Gram": lambda value: value / 1000,
        "Milligram": lambda value: value,
        "Microgram": lambda value: value * 1000,
        "Imperial ton": lambda value: value / 1.016e9,
        "US ton": lambda value: value / 9.072e8,
        "Stone": lambda value: value / 6.35e6,
        "Pound": lambda value: value / 453600,
        "Ounce": lambda value: value / 28350
    },
    "Microgram": {
        "Metric ton": lambda value: value / 1e12,
        "Kilogram": lambda value: value / 1e9,
        "Gram": lambda value: value / 1e6,
        "Milligram": lambda value: value / 1000,
        "Microgram": lambda value: value,
        "Imperial ton": lambda value: value / 1.016e12,
        "US ton": lambda value: value / 9.072e11,
        "Stone": lambda value: value / 6.35e9,
        "Pound": lambda value: value / 4.536e8,
        "Ounce": lambda value: value / 2.835e7
    },
    "Imperial ton": {
        "Metric ton": lambda value: value * 1.016,
        "Kilogram": lambda value: value * 1016,
        "Gram": lambda value: value * 1.016e6,
        "Milligram": lambda value: value * 1.016e9,
        "Microgram": lambda value: value * 1.016e12,
        "Imperial ton": lambda value: value,
        "US ton": lambda value: value * 1.12,
        "Stone": lambda value: value * 160,
        "Pound": lambda value: value * 2240,
        "Ounce": lambda value: value * 35840
    },
    "US ton": {
        "Metric ton": lambda value: value / 1.102,
        "Kilogram": lambda value: value * 907.2,
        "Gram": lambda value: value * 907200,
        "Milligram": lambda value: value * 9.072e8,
        "Microgram": lambda value: value * 9.072e11,
        "Imperial ton": lambda value: value / 1.12,
        "US ton": lambda value: value,
        "Stone": lambda value: value * 142.9,
        "Pound": lambda value: value * 2000,
        "Ounce": lambda value: value * 32000
    },
    "Stone": {
        "Metric ton": lambda value: value / 157.5,
        "Kilogram": lambda value: value * 6.35,
        "Gram": lambda value: value * 6350,
        "Milligram": lambda value: value * 6.35e6,
        "Microgram": lambda value: value * 6.35e9,
        "Imperial ton": lambda value: value / 160,
        "US ton": lambda value: value / 142.9,
        "Stone": lambda value: value,
        "Pound": lambda value: value * 14,
        "Ounce": lambda value: value * 224
    },
    "Pound": {
        "Metric ton": lambda value: value / 2205,
        "Kilogram": lambda value: value / 2.205,
        "Gram": lambda value: value * 453.6,
        "Milligram": lambda value: value * 453600,
        "Microgram": lambda value: value * 4.536e8,
        "Imperial ton": lambda value: value / 2240,
        "US ton": lambda value: value / 2000,
        "Stone": lambda value: value / 14,
        "Pound": lambda value: value,
        "Ounce": lambda value: value * 16
    },
    "Ounce": {
        "Metric ton": lambda value: value / 35270,
        "Kilogram": lambda value: value / 35.274,
        "Gram": lambda value: value * 28.35,
        "Milligram": lambda value: value * 28350,
        "Microgram": lambda value: value * 2.835e7,
        "Imperial ton": lambda value: value / 35840,
        "US ton": lambda value: value / 32000,
        "Stone": lambda value: value / 224,
        "Pound": lambda value: value / 16,
        "Ounce": lambda value: value 
    },
    # PLANE ANGLE
    "Arcsecond": {
        "Arcsecond": lambda value: value,
        "Degree": lambda value: value / 3600,     
        "Gradian": lambda value: value / 3240,
        "Milliradian": lambda value: value * (1000 * math.pi) / (180 * 3600),
        "Minute of Arc": lambda value: value / 60,
        "Radian": lambda value: value * math.pi / (180 * 3600)
    },
    "Degree": {
        "Arcsecond": lambda value: value * 3600,
        "Degree": lambda value: value,     
        "Gradian": lambda value: value * (200 / 180),
        "Milliradian": lambda value: value * (1000 * math.pi) / 180,
        "Minute of Arc": lambda value: value * 60,
        "Radian": lambda value: value * math.pi / 180
    },     
    "Gradian": {
        "Arcsecond": lambda value: value * 3240,
        "Degree": lambda value: value * 180 / 200,     
        "Gradian": lambda value: value,
        "Milliradian": lambda value: value * (1000 * math.pi) / 200,
        "Minute of Arc": lambda value: value * 54,
        "Radian": lambda value: value * math.pi / 200
    },
    "Milliradian": {
        "Arcsecond": lambda value: value * (3600 * 180) / (1000 * math.pi),
        "Degree": lambda value: value * 180 / (1000 * math.pi),     
        "Gradian": lambda value: value * 200 / (1000 * math.pi),
        "Milliradian": lambda value: value,
        "Minute of Arc": lambda value: value * (60 * 180) / (1000 * math.pi),
        "Radian": lambda value: value / 1000
    },
    "Minute of Arc": {
        "Arcsecond": lambda value: value * 60,
        "Degree": lambda value: value / 60,     
        "Gradian": lambda value: value / 54,
        "Milliradian": lambda value: value * (1000 * math.pi) / (60 * 180),
        "Minute of Arc": lambda value: value,
        "Radian": lambda value: value * math.pi / (60 * 180)
    },
    "Radian": {
        "Arcsecond": lambda value: value * (3600 * 180) / math.pi,
        "Degree": lambda value: value * 180 / math.pi,     
        "Gradian": lambda value: value * 200 / math.pi,
        "Milliradian": lambda value: value * 1000,
        "Minute of Arc": lambda value: value * (60 * 180) / math.pi,
        "Radian": lambda value: value
    },
    # PRESSURE
    "Bar": {
        "Bar": lambda value: value,
        "Pascal": lambda value: value * 100000,
        "Pound-force per square inch": lambda value: value * 14.504,
        "Standard atmosphere": lambda value: value / 1.013,
        "Torr": lambda value: value * 750.1
    },
    "Pascal": {
        "Bar": lambda value: value / 100000,
        "Pascal": lambda value: value,
        "Pound-force per square inch": lambda value: value / 6895,
        "Standard atmosphere": lambda value: value / 101300,
        "Torr": lambda value: value / 133.3
    },
    "Pound-force per square inch": {
        "Bar": lambda value: value / 14.504,
        "Pascal": lambda value: value * 6895,
        "Pound-force per square inch": lambda value: value,
        "Standard atmosphere": lambda value: value / 14.696,
        "Torr": lambda value: value * 51.715
    },
    "Standard atmosphere": {
        "Bar": lambda value: value * 1.013,
        "Pascal": lambda value: value * 101300,
        "Pound-force per square inch": lambda value: value * 14.696,
        "Standard atmosphere": lambda value: value,
        "Torr": lambda value: value * 760
    },
    "Torr": {
        "Bar": lambda value: value / 750.1,
        "Pascal": lambda value: value * 133.3,
        "Pound-force per square inch": lambda value: value / 51.715,
        "Standard atmosphere": lambda value: value / 760,
        "Torr": lambda value: value
    },
    # SPEED
    "Miles per hour": {
        "Miles per hour": lambda value: value,
        "Foot per second": lambda value: value * 1.467,
        "Meter per second": lambda value: value / 2.237,
        "Kilometer per hour": lambda value: value * 1.609,
        "Knot": lambda value: value / 1.151
    },
    "Foot per second": {
        "Miles per hour": lambda value: value / 1.467,
        "Foot per second": lambda value: value,
        "Meter per second": lambda value: value / 3.281,
        "Kilometer per hour": lambda value: value * 1.097,
        "Knot": lambda value: value / 1.688
    },
    "Meter per second": {
        "Miles per hour": lambda value: value * 2.237,
        "Foot per second": lambda value: value * 3.281,
        "Meter per second": lambda value: value,
        "Kilometer per hour": lambda value: value * 3.6,
        "Knot": lambda value: value * 1.944
    },
    "Kilometer per hour": {
        "Miles per hour": lambda value: value / 1.609,
        "Foot per second": lambda value: value / 1.097,
        "Meter per second": lambda value: value / 3.6,
        "Kilometer per hour": lambda value: value,
        "Knot": lambda value: value / 1.852
    },
    "Knot": {
        "Miles per hour": lambda value: value * 1.151,
        "Foot per second": lambda value: value * 1.688,
        "Meter per second": lambda value: value / 1.944,
        "Kilometer per hour": lambda value: value * 1.852,
        "Knot": lambda value: value
    },
    # TEMPERATURE
    "Degree Celsius": {
        "Degree Celsius": lambda value: value,
        "Fahrenheit": lambda value: value * (9 / 5) + 32,
        "Kelvin": lambda value: value + 273.15
    },
    "Fahrenheit": {
        "Degree Celsius": lambda value: (value - 32) * (5 / 9),
        "Fahrenheit": lambda value: value,
        "Kelvin": lambda value: (value - 32) * (5 / 9) + 273.15
    },
    "Kelvin": {
        "Degree Celsius": lambda value: value - 273.15,
        "Fahrenheit": lambda value: (value - 273.15) * (9 / 5) + 32,
        "Kelvin": lambda value: value
    },
    # TIME
    "Nanosecond": {
        "Nanosecond": lambda value: value,
        "Microsecond": lambda value: value / 1000,
        "Millisecond": lambda value: value / 1e6,
        "Second": lambda value: value / 1e9,
        "Minute": lambda value: value / 6e10,
        "Hour": lambda value: value / 3.6e12,
        "Day": lambda value: value / 8.64e13,
        "Week": lambda value: value / 6.048e14,
        "Month": lambda value: value / 2.628e15,
        "Calender year": lambda value: value / 3.154e16,
        "Decade": lambda value: value / 3.154e17,
        "Century": lambda value: value / 3.154e18
    },
    "Microsecond": {
        "Nanosecond": lambda value: value * 1000,
        "Microsecond": lambda value: value,
        "Millisecond": lambda value: value / 1000,
        "Second": lambda value: value / 1e6,
        "Minute": lambda value: value / 6e7,
        "Hour": lambda value: value / 3.6e9,
        "Day": lambda value: value / 8.64e10,
        "Week": lambda value: value / 6.048e11,
        "Month": lambda value: value / 2.628e12,
        "Calender year": lambda value: value / 3.154e13,
        "Decade": lambda value: value / 3.154e14,
        "Century": lambda value: value / 3.154e15
    },
    "Millisecond": {
        "Nanosecond": lambda value: value * 1e6,
        "Microsecond": lambda value: value * 1000,
        "Millisecond": lambda value: value,
        "Second": lambda value: value / 1000,
        "Minute": lambda value: value / 60000,
        "Hour": lambda value: value / 3.6e6,
        "Day": lambda value: value / 8.64e7,
        "Week": lambda value: value / 6.048e8,
        "Month": lambda value: value / 2.628e9,
        "Calender year": lambda value: value / 3.154e10,
        "Decade": lambda value: value / 3.154e11,
        "Century": lambda value: value / 3.154e12
    },
    "Second": {
        "Nanosecond": lambda value: value * 1e9,
        "Microsecond": lambda value: value * 1e6,
        "Millisecond": lambda value: value * 1000,
        "Second": lambda value: value,
        "Minute": lambda value: value / 60,
        "Hour": lambda value: value / 3600,
        "Day": lambda value: value / 86400,
        "Week": lambda value: value / 604800,
        "Month": lambda value: value / 2.628e6,
        "Calender year": lambda value: value / 3.154e7,
        "Decade": lambda value: value / 3.154e8,
        "Century": lambda value: value / 3.154e9
    },
    "Minute": {
        "Nanosecond": lambda value: value * 6e10,
        "Microsecond": lambda value: value * 6e7,
        "Millisecond": lambda value: value * 60000,
        "Second": lambda value: value * 60,
        "Minute": lambda value: value,
        "Hour": lambda value: value / 60,
        "Day": lambda value: value / 1440,
        "Week": lambda value: value / 10080,
        "Month": lambda value: value / 43800,
        "Calender year": lambda value: value / 525600,
        "Decade": lambda value: value / 5.256e6,
        "Century": lambda value: value / 5.256e7
    },
    "Hour": {
        "Nanosecond": lambda value: value * 3.6e12,
        "Microsecond": lambda value: value * 3.6e9,
        "Millisecond": lambda value: value * 3.6e6,
        "Second": lambda value: value * 3600,
        "Minute": lambda value: value * 60,
        "Hour": lambda value: value,
        "Day": lambda value: value / 24,
        "Week": lambda value: value / 168,
        "Month": lambda value: value / 730,
        "Calender year": lambda value: value / 8760,
        "Decade": lambda value: value / 87600,
        "Century": lambda value: value / 876000
    },
    "Day": {
        "Nanosecond": lambda value: value * 8.64e13,
        "Microsecond": lambda value: value * 8.64e10,
        "Millisecond": lambda value: value * 8.64e7,
        "Second": lambda value: value * 86400,
        "Minute": lambda value: value * 1440,
        "Hour": lambda value: value * 24,
        "Day": lambda value: value,
        "Week": lambda value: value / 7,
        "Month": lambda value: value / 30.417,
        "Calender year": lambda value: value / 365,
        "Decade": lambda value: value / 3650,
        "Century": lambda value: value / 36500
    },
    "Week": {
        "Nanosecond": lambda value: value * 6.048e14,
        "Microsecond": lambda value: value * 6.048e11,
        "Millisecond": lambda value: value * 6.048e8,
        "Second": lambda value: value * 604800,
        "Minute": lambda value: value * 10080,
        "Hour": lambda value: value * 168,
        "Day": lambda value: value * 7,
        "Week": lambda value: value,
        "Month": lambda value: value / 4.345,
        "Calender year": lambda value: value / 52.143,
        "Decade": lambda value: value / 521.4,
        "Century": lambda value: value / 5214
    },
    "Month": {
        "Nanosecond": lambda value: value * 2.628e15,
        "Microsecond": lambda value: value * 2.628e12,
        "Millisecond": lambda value: value * 2.628e9,
        "Second": lambda value: value * 2.628e6,
        "Minute": lambda value: value * 43800,
        "Hour": lambda value: value * 730,
        "Day": lambda value: value * 30.417,
        "Week": lambda value: value * 4.345,
        "Month": lambda value: value,
        "Calender year": lambda value: value / 12,
        "Decade": lambda value: value / 120,
        "Century": lambda value: value / 1200
    },
    "Calender year": {
        "Nanosecond": lambda value: value * 3.154e16,
        "Microsecond": lambda value: value * 3.154e13,
        "Millisecond": lambda value: value * 3.154e10,
        "Second": lambda value: value * 3.154e7,
        "Minute": lambda value: value * 525600,
        "Hour": lambda value: value * 8760,
        "Day": lambda value: value * 365,
        "Week": lambda value: value * 52.143,
        "Month": lambda value: value * 12,
        "Calender year": lambda value: value,
        "Decade": lambda value: value / 10,
        "Century": lambda value: value / 100
    },
    "Decade": {
        "Nanosecond": lambda value: value * 3.154e17,
        "Microsecond": lambda value: value * 3.154e14,
        "Millisecond": lambda value: value * 3.154e11,
        "Second": lambda value: value * 3.154e8,
        "Minute": lambda value: value * 5.256e6,
        "Hour": lambda value: value * 87600,
        "Day": lambda value: value * 3650,
        "Week": lambda value: value * 521.4,
        "Month": lambda value: value * 120,
        "Calender year": lambda value: value * 10,
        "Decade": lambda value: value,
        "Century": lambda value: value / 10 
    },
    "Century": {
        "Nanosecond": lambda value: value * 3.154e18,
        "Microsecond": lambda value: value * 3.154e15,
        "Millisecond": lambda value: value * 3.154e12,
        "Second": lambda value: value * 3.154e9,
        "Minute": lambda value: value * 5.256e7,
        "Hour": lambda value: value * 876000,
        "Day": lambda value: value * 36500,
        "Week": lambda value: value * 5214,
        "Month": lambda value: value * 1200,
        "Calender year": lambda value: value * 100,
        "Decade": lambda value: value * 10,
        "Century": lambda value: value
    },
    # VOLUME
    "US liquid gallon": {
        "US liquid gallon": lambda value: value,
        "US liquid quart": lambda value: value * 4,
        "US liquid pint": lambda value: value * 8,
        "US legal cup": lambda value: value * 15.773,
        "US fluid ounce": lambda value: value * 128,
        "US tablespoon": lambda value: value * 256,
        "US teaspoon": lambda value: value * 768,
        "Cubic meter": lambda value: value / 264.2,
        "Liter": lambda value: value * 3.785,
        "Milliliter": lambda value: value * 3785,
        "Imperial gallon": lambda value: value / 1.201,
        "Imperial quart": lambda value: value * 3.331,
        "Imperial pint": lambda value: value * 6.661,
        "Imperial cup": lambda value: value * 13.323,
        "Imperial fluid ounce": lambda value: value * 133.2,
        "Imperial tablespoon": lambda value: value * 213.2,
        "Imperial teaspoon": lambda value: value * 639.5,
        "Cubic foot": lambda value: value / 7.48,
        "Cubic inch": lambda value: value * 231
    },
    "US liquid quart": {
        "US liquid gallon": lambda value: value / 4,
        "US liquid quart": lambda value: value,
        "US liquid pint": lambda value: value * 2,
        "US legal cup": lambda value: value * 3.943,
        "US fluid ounce": lambda value: value * 32,
        "US tablespoon": lambda value: value * 64,
        "US teaspoon": lambda value: value * 192,
        "Cubic meter": lambda value: value / 1057,
        "Liter": lambda value: value / 1.057,
        "Milliliter": lambda value: value * 946.4,
        "Imperial gallon": lambda value: value / 4.804,
        "Imperial quart": lambda value: value / 1.201,
        "Imperial pint": lambda value: value * 1.665,
        "Imperial cup": lambda value: value * 3.331,
        "Imperial fluid ounce": lambda value: value * 33.307,
        "Imperial tablespoon": lambda value: value * 53.291,
        "Imperial teaspoon": lambda value: value * 159.9,
        "Cubic foot": lambda value: value / 29.922,
        "Cubic inch": lambda value: value * 57.75
    },
    "US liquid pint": {
        "US liquid gallon": lambda value: value / 8,
        "US liquid quart": lambda value: value / 2,
        "US liquid pint": lambda value: value,
        "US legal cup": lambda value: value * 1.972,
        "US fluid ounce": lambda value: value * 16,
        "US tablespoon": lambda value: value * 32,
        "US teaspoon": lambda value: value * 96,
        "Cubic meter": lambda value: value / 2113,
        "Liter": lambda value: value / 2.113,
        "Milliliter": lambda value: value * 473.2,
        "Imperial gallon": lambda value: value / 9.608,
        "Imperial quart": lambda value: value / 2.402,
        "Imperial pint": lambda value: value / 1.201,
        "Imperial cup": lambda value: value * 1.665,
        "Imperial fluid ounce": lambda value: value * 16.653,
        "Imperial tablespoon": lambda value: value * 26.646,
        "Imperial teaspoon": lambda value: value * 79.937,
        "Cubic foot": lambda value: value / 59.844,
        "Cubic inch": lambda value: value * 28.875
    },
    "US legal cup": {
        "US liquid gallon": lambda value: value / 15.772,
        "US liquid quart": lambda value: value / 3.943,
        "US liquid pint": lambda value: value / 1.972,
        "US legal cup": lambda value: value,
        "US fluid ounce": lambda value: value * 8.115,
        "US tablespoon": lambda value: value * 16.231,
        "US teaspoon": lambda value: value * 48.692,
        "Cubic meter": lambda value: value / 4167,
        "Liter": lambda value: value / 4.167,
        "Milliliter": lambda value: value * 240,
        "Imperial gallon": lambda value: value / 18.942,
        "Imperial quart": lambda value: value / 4.736,
        "Imperial pint": lambda value: value / 2.368,
        "Imperial cup": lambda value: value / 1.184,
        "Imperial fluid ounce": lambda value: value * 8.447,
        "Imperial tablespoon": lambda value: value * 13.515,
        "Imperial teaspoon": lambda value: value * 40.545,
        "Cubic foot": lambda value: value / 118,
        "Cubic inch": lambda value: value * 14.646
    },
    "US fluid ounce": {
        "US liquid gallon": lambda value: value / 128,
        "US liquid quart": lambda value: value / 32,
        "US liquid pint": lambda value: value / 16,
        "US legal cup": lambda value: value / 8.115,
        "US fluid ounce": lambda value: value,
        "US tablespoon": lambda value: value * 2,
        "US teaspoon": lambda value: value * 6,
        "Cubic meter": lambda value: value / 33810,
        "Liter": lambda value: value / 33.814,
        "Milliliter": lambda value: value * 29.574,
        "Imperial gallon": lambda value: value / 153.7,
        "Imperial quart": lambda value: value / 38.43,
        "Imperial pint": lambda value: value / 19.215,
        "Imperial cup": lambda value: value / 9.608,
        "Imperial fluid ounce": lambda value: value * 1.041,
        "Imperial tablespoon": lambda value: value * 1.665,
        "Imperial teaspoon": lambda value: value * 4.996,
        "Cubic foot": lambda value: value / 957.5,
        "Cubic inch": lambda value: value * 1.805
    },
    "US tablespoon": {
        "US liquid gallon": lambda value: value / 256,
        "US liquid quart": lambda value: value / 64,
        "US liquid pint": lambda value: value / 32,
        "US legal cup": lambda value: value / 16.231,
        "US fluid ounce": lambda value: value / 2,
        "US tablespoon": lambda value: value,
        "US teaspoon": lambda value: value * 3,
        "Cubic meter": lambda value: value / 67630,
        "Liter": lambda value: value / 67.628,
        "Milliliter": lambda value: value * 14.787,
        "Imperial gallon": lambda value: value / 307.4,
        "Imperial quart": lambda value: value / 76.861,
        "Imperial pint": lambda value: value / 38.43,
        "Imperial cup": lambda value: value / 19.215,
        "Imperial fluid ounce": lambda value: value / 1.922,
        "Imperial tablespoon": lambda value: value / 1.201,
        "Imperial teaspoon": lambda value: value * 2.498,
        "Cubic foot": lambda value: value / 1915,
        "Cubic inch": lambda value: value / 1.108
    },
    "US teaspoon": {
        "US liquid gallon": lambda value: value / 768,
        "US liquid quart": lambda value: value / 192,
        "US liquid pint": lambda value: value / 96,
        "US legal cup": lambda value: value / 48.692,
        "US fluid ounce": lambda value: value / 6,
        "US tablespoon": lambda value: value / 3,
        "US teaspoon": lambda value: value,
        "Cubic meter": lambda value: value / 202900,
        "Liter": lambda value: value / 202.9,
        "Milliliter": lambda value: value * 4.929,
        "Imperial gallon": lambda value: value / 922.3,
        "Imperial quart": lambda value: value / 230.6,
        "Imperial pint": lambda value: value / 115.3,
        "Imperial cup": lambda value: value / 57.646,
        "Imperial fluid ounce": lambda value: value / 5.765,
        "Imperial tablespoon": lambda value: value / 3.603,
        "Imperial teaspoon": lambda value: value / 1.201,
        "Cubic foot": lambda value: value / 5745,
        "Cubic inch": lambda value: value / 3.325
    },
    "Cubic meter": {
        "US liquid gallon": lambda value: value * 264.2,
        "US liquid quart": lambda value: value * 1057,
        "US liquid pint": lambda value: value * 2113,
        "US legal cup": lambda value: value * 4167,
        "US fluid ounce": lambda value: value * 33810,
        "US tablespoon": lambda value: value * 67630,
        "US teaspoon": lambda value: value * 202900,
        "Cubic meter": lambda value: value,
        "Liter": lambda value: value * 1000,
        "Milliliter": lambda value: value * 1e6,
        "Imperial gallon": lambda value: value * 220,
        "Imperial quart": lambda value: value * 879.9,
        "Imperial pint": lambda value: value * 1760,
        "Imperial cup": lambda value: value * 3520,
        "Imperial fluid ounce": lambda value: value * 35200,
        "Imperial tablespoon": lambda value: value * 56310,
        "Imperial teaspoon": lambda value: value * 168900,
        "Cubic foot": lambda value: value * 35.315,
        "Cubic inch": lambda value: value * 61020
    },
    "Liter": {
        "US liquid gallon": lambda value: value / 3.785,
        "US liquid quart": lambda value: value * 1.057,
        "US liquid pint": lambda value: value * 2.113,
        "US legal cup": lambda value: value * 4.167,
        "US fluid ounce": lambda value: value * 33.814,
        "US tablespoon": lambda value: value * 67.628,
        "US teaspoon": lambda value: value * 202.9,
        "Cubic meter": lambda value: value / 1000,
        "Liter": lambda value: value,
        "Milliliter": lambda value: value * 1000,
        "Imperial gallon": lambda value: value / 4.546,
        "Imperial quart": lambda value: value / 1.136,
        "Imperial pint": lambda value: value * 1.76,
        "Imperial cup": lambda value: value * 3.52,
        "Imperial fluid ounce": lambda value: value * 35.195,
        "Imperial tablespoon": lambda value: value * 56.312,
        "Imperial teaspoon": lambda value: value * 168.9,
        "Cubic foot": lambda value: value / 28.317,
        "Cubic inch": lambda value: value * 61.024
    },
    "Milliliter": {
        "US liquid gallon": lambda value: value / 3785,
        "US liquid quart": lambda value: value / 946.4,
        "US liquid pint": lambda value: value / 473.2,
        "US legal cup": lambda value: value / 240,
        "US fluid ounce": lambda value: value / 29.574,
        "US tablespoon": lambda value: value / 14.787,
        "US teaspoon": lambda value: value / 4.929,
        "Cubic meter": lambda value: value / 1e6,
        "Liter": lambda value: value / 1000,
        "Milliliter": lambda value: value,
        "Imperial gallon": lambda value: value / 4546,
        "Imperial quart": lambda value: value / 1137,
        "Imperial pint": lambda value: value / 568.3,
        "Imperial cup": lambda value: value / 284.1,
        "Imperial fluid ounce": lambda value: value / 28.413,
        "Imperial tablespoon": lambda value: value / 17.758,
        "Imperial teaspoon": lambda value: value / 5.919,
        "Cubic foot": lambda value: value / 28320,
        "Cubic inch": lambda value: value / 16.387
    },
    "Imperial gallon": {
        "US liquid gallon": lambda value: value * 1.201,
        "US liquid quart": lambda value: value * 4.804,
        "US liquid pint": lambda value: value * 9.608,
        "US legal cup": lambda value: value * 18.942,
        "US fluid ounce": lambda value: value * 153.7,
        "US tablespoon": lambda value: value * 307.4,
        "US teaspoon": lambda value: value * 922.3,
        "Cubic meter": lambda value: value / 220,
        "Liter": lambda value: value * 4.546,
        "Milliliter": lambda value: value * 4546,
        "Imperial gallon": lambda value: value,
        "Imperial quart": lambda value: value * 4,
        "Imperial pint": lambda value: value * 8,
        "Imperial cup": lambda value: value * 16,
        "Imperial fluid ounce": lambda value: value * 160,
        "Imperial tablespoon": lambda value: value * 256,
        "Imperial teaspoon": lambda value: value * 768,
        "Cubic foot": lambda value: value / 6.229,
        "Cubic inch": lambda value: value * 277.4
    },
    "Imperial quart": {
        "US liquid gallon": lambda value: value / 3.331,
        "US liquid quart": lambda value: value * 1.201,
        "US liquid pint": lambda value: value * 2.402,
        "US legal cup": lambda value: value * 4.736,
        "US fluid ounce": lambda value: value * 38.43,
        "US tablespoon": lambda value: value * 76.861,
        "US teaspoon": lambda value: value * 230.6,
        "Cubic meter": lambda value: value / 879.9,
        "Liter": lambda value: value * 1.137,
        "Milliliter": lambda value: value * 1137,
        "Imperial gallon": lambda value: value / 4,
        "Imperial quart": lambda value: value,
        "Imperial pint": lambda value: value * 2,
        "Imperial cup": lambda value: value * 4,
        "Imperial fluid ounce": lambda value: value * 40,
        "Imperial tablespoon": lambda value: value * 64,
        "Imperial teaspoon": lambda value: value * 192,
        "Cubic foot": lambda value: value / 24.915,
        "Cubic inch": lambda value: value * 69.355
    },
    "Imperial pint": {
        "US liquid gallon": lambda value: value / 6.661,
        "US liquid quart": lambda value: value / 1.665,
        "US liquid pint": lambda value: value * 1.201,
        "US legal cup": lambda value: value * 2.368,
        "US fluid ounce": lambda value: value * 19.215,
        "US tablespoon": lambda value: value * 38.43,
        "US teaspoon": lambda value: value * 115.3,
        "Cubic meter": lambda value: value / 1760,
        "Liter": lambda value: value / 1.76,
        "Milliliter": lambda value: value * 568.3,
        "Imperial gallon": lambda value: value / 8,
        "Imperial quart": lambda value: value / 2,
        "Imperial pint": lambda value: value,
        "Imperial cup": lambda value: value * 2,
        "Imperial fluid ounce": lambda value: value * 20,
        "Imperial tablespoon": lambda value: value * 32,
        "Imperial teaspoon": lambda value: value * 96,
        "Cubic foot": lambda value: value / 49.831,
        "Cubic inch": lambda value: value * 34.677
    },
    "Imperial cup": {
        "US liquid gallon": lambda value: value / 13.323,
        "US liquid quart": lambda value: value / 3.331,
        "US liquid pint": lambda value: value / 1.665,
        "US legal cup": lambda value: value * 1.184,
        "US fluid ounce": lambda value: value * 9.608,
        "US tablespoon": lambda value: value * 19.215,
        "US teaspoon": lambda value: value * 57.646,
        "Cubic meter": lambda value: value / 3520,
        "Liter": lambda value: value / 3.52,
        "Milliliter": lambda value: value * 284.1,
        "Imperial gallon": lambda value: value / 16,
        "Imperial quart": lambda value: value / 4,
        "Imperial pint": lambda value: value / 2,
        "Imperial cup": lambda value: value,
        "Imperial fluid ounce": lambda value: value * 10,
        "Imperial tablespoon": lambda value: value * 16,
        "Imperial teaspoon": lambda value: value * 48,
        "Cubic foot": lambda value: value / 99.661,
        "Cubic inch": lambda value: value * 17.339
    },
    "Imperial fluid ounce": {
        "US liquid gallon": lambda value: value / 133.2,
        "US liquid quart": lambda value: value / 33.307,
        "US liquid pint": lambda value: value / 16.654,
        "US legal cup": lambda value: value / 8.447,
        "US fluid ounce": lambda value: value / 1.041,
        "US tablespoon": lambda value: value * 1.922,
        "US teaspoon": lambda value: value * 5.765,
        "Cubic meter": lambda value: value / 35200,
        "Liter": lambda value: value / 35.195,
        "Milliliter": lambda value: value * 28.413,
        "Imperial gallon": lambda value: value / 160,
        "Imperial quart": lambda value: value / 40,
        "Imperial pint": lambda value: value / 20,
        "Imperial cup": lambda value: value / 10,
        "Imperial fluid ounce": lambda value: value,
        "Imperial tablespoon": lambda value: value * 1.6,
        "Imperial teaspoon": lambda value: value * 4.8,
        "Cubic foot": lambda value: value / 996.6,
        "Cubic inch": lambda value: value * 1.734
    },
    "Imperial tablespoon": {
        "US liquid gallon": lambda value: value / 213.2,
        "US liquid quart": lambda value: value / 53.291,
        "US liquid pint": lambda value: value / 26.646,
        "US legal cup": lambda value: value / 13.515,
        "US fluid ounce": lambda value: value / 1.665,
        "US tablespoon": lambda value: value * 1.201,
        "US teaspoon": lambda value: value * 3.603,
        "Cubic meter": lambda value: value / 56310,
        "Liter": lambda value: value / 56.312,
        "Milliliter": lambda value: value * 17.758,
        "Imperial gallon": lambda value: value / 256,
        "Imperial quart": lambda value: value / 64,
        "Imperial pint": lambda value: value / 32,
        "Imperial cup": lambda value: value / 16,
        "Imperial fluid ounce": lambda value: value / 1.6,
        "Imperial tablespoon": lambda value: value,
        "Imperial teaspoon": lambda value: value * 3,
        "Cubic foot": lambda value: value / 1595,
        "Cubic inch": lambda value: value * 1.084
    },
    "Imperial teaspoon": {
        "US liquid gallon": lambda value: value / 639.5,
        "US liquid quart": lambda value: value / 159.9,
        "US liquid pint": lambda value: value / 79.937,
        "US legal cup": lambda value: value / 40.545,
        "US fluid ounce": lambda value: value / 4.996,
        "US tablespoon": lambda value: value / 2.498,
        "US teaspoon": lambda value: value * 1.201,
        "Cubic meter": lambda value: value / 168900,
        "Liter": lambda value: value / 168.9,
        "Milliliter": lambda value: value * 5.919,
        "Imperial gallon": lambda value: value / 768,
        "Imperial quart": lambda value: value / 192,
        "Imperial pint": lambda value: value / 96,
        "Imperial cup": lambda value: value / 48,
        "Imperial fluid ounce": lambda value: value / 4.8,
        "Imperial tablespoon": lambda value: value / 3,
        "Imperial teaspoon": lambda value: value,
        "Cubic foot": lambda value: value / 4784,
        "Cubic inch": lambda value: value / 2.768
    },
    "Cubic foot": {
        "US liquid gallon": lambda value: value * 7.481,
        "US liquid quart": lambda value: value * 29.922,
        "US liquid pint": lambda value: value * 59.844,
        "US legal cup": lambda value: value * 118,
        "US fluid ounce": lambda value: value * 957.5,
        "US tablespoon": lambda value: value * 1915,
        "US teaspoon": lambda value: value * 5745,
        "Cubic meter": lambda value: value / 35.315,
        "Liter": lambda value: value * 28.317,
        "Milliliter": lambda value: value * 28320,
        "Imperial gallon": lambda value: value * 6.229,
        "Imperial quart": lambda value: value * 24.915,
        "Imperial pint": lambda value: value * 49.831,
        "Imperial cup": lambda value: value * 99.661,
        "Imperial fluid ounce": lambda value: value * 996.6,
        "Imperial tablespoon": lambda value: value * 1595,
        "Imperial teaspoon": lambda value: value * 4784,
        "Cubic foot": lambda value: value,
        "Cubic inch": lambda value: value * 1728
    },
    "Cubic inch": {
        "US liquid gallon": lambda value: value / 231,
        "US liquid quart": lambda value: value / 57.75,
        "US liquid pint": lambda value: value / 28.875,
        "US legal cup": lambda value: value / 14.646,
        "US fluid ounce": lambda value: value / 1.805,
        "US tablespoon": lambda value: value * 1.108,
        "US teaspoon": lambda value: value * 3.325,
        "Cubic meter": lambda value: value / 61020,
        "Liter": lambda value: value / 61.024,
        "Milliliter": lambda value: value * 16.387,
        "Imperial gallon": lambda value: value / 277.4,
        "Imperial quart": lambda value: value / 69.355,
        "Imperial pint": lambda value: value / 34.677,
        "Imperial cup": lambda value: value / 17.339,
        "Imperial fluid ounce": lambda value: value / 1.734,
        "Imperial tablespoon": lambda value: value / 1.084,
        "Imperial teaspoon": lambda value: value * 2.768,
        "Cubic foot": lambda value: value / 1728,
        "Cubic inch": lambda value: value
    }
}

def types() -> list[str]:
    """
    Returns all unit types as a list.

    Returns:
        (list[str]): All unit types.
    """
    return list(unit_library.keys())

def units(unit_type: str) -> list[str]:
    """
    Returns all units for a given unit type.

    Parameters:
        unit_type (str): Type of unit.
    Returns:
        (list[str]): All units of the given type.
    """
    try:
        return list(unit_library[unit_type].keys())
    except:
        print("Given unit type not found in unit library.")
        return []

def symbol(unit: str) -> str:
    """
    Returns the unit symbol for the given unit.

    Parameters:
        unit: Name of the unit of measurement.
    Returns:
        (str): The unit symbol of the given unit. If unit not found, returns '--'.
    """
    # find given unit in library
    for type in unit_library:
        try:
            return unit_library[type][unit]
        except:
            continue

    # unit not found
    print("Given unit not found in unit library.")
    return "--"

def convert(value: float, start_unit: str, end_unit: str) -> float:
    """
    Converts the given value from the given start unit to the given end unit.

    Parameters:
        value (float): Starting value.
        start_unit (str): Unit before conversion.
        end_unit (str): Unit after conversion. 
    """
    try:
        return conversion_library[start_unit][end_unit](value)
    except:
        print("Given unit not found in conversion library.")
        return 0
